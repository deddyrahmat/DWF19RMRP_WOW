[{"D:\\Projek\\fullstack javascript\\wow\\src\\index.js":"1","D:\\Projek\\fullstack javascript\\wow\\src\\pages\\App.js":"2","D:\\Projek\\fullstack javascript\\wow\\src\\pages\\Landing\\index.js":"3","D:\\Projek\\fullstack javascript\\wow\\src\\components\\index.js":"4","D:\\Projek\\fullstack javascript\\wow\\src\\assets\\index.js":"5","D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\index.js":"6","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\Routes\\index.js":"7","D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Buttons\\index.js":"8","D:\\Projek\\fullstack javascript\\wow\\src\\pages\\index.js":"9","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\index.js":"10","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Auth\\Register.js":"11","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\index.js":"12","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Auth\\Login.js":"13","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\Context\\index.js":"14","D:\\Projek\\fullstack javascript\\wow\\src\\pages\\Home\\index.js":"15","D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Inputs\\index.js":"16","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\Routes\\PrivateRoute.js":"17","D:\\Projek\\fullstack javascript\\wow\\src\\FakeData\\index.js":"18","D:\\Projek\\fullstack javascript\\wow\\src\\FakeData\\Users\\index.js":"19","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Sidebar\\index.js":"20","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\MainContent\\index.js":"21","D:\\Projek\\fullstack javascript\\wow\\src\\pages\\Dashboard\\index.js":"22","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\Routes\\PrivateRouteAdmin.js":"23","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Navbars\\index.js":"24","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Transactions\\index.js":"25","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Book\\AddBook.js":"26","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\HeroImage\\index.js":"27","D:\\Projek\\fullstack javascript\\wow\\src\\FakeData\\Books\\index.js":"28","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Subscribe\\index.js":"29","D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Uploads\\index.js":"30","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Profile\\index.js":"31","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Profile\\ListBookProfile.js":"32","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Profile\\HeroProfile.js":"33","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\DetailBook\\index.js":"34","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\DetailBook\\InfoDetailBook.js":"35","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\DetailBook\\AboutDetailBook.js":"36","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\ReadBook\\index.js":"37","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\API\\index.js":"38","D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Loading\\index.js":"39","D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Logout\\index.js":"40"},{"size":392,"mtime":1612908135148,"results":"41","hashOfConfig":"42"},{"size":1197,"mtime":1612949664682,"results":"43","hashOfConfig":"42"},{"size":1233,"mtime":1612056809181,"results":"44","hashOfConfig":"42"},{"size":54,"mtime":1611731293470,"results":"45","hashOfConfig":"42"},{"size":1181,"mtime":1612821750545,"results":"46","hashOfConfig":"42"},{"size":219,"mtime":1612949057411,"results":"47","hashOfConfig":"42"},{"size":1083,"mtime":1612949086391,"results":"48","hashOfConfig":"42"},{"size":546,"mtime":1612081352554,"results":"49","hashOfConfig":"42"},{"size":135,"mtime":1611869222660,"results":"50","hashOfConfig":"42"},{"size":639,"mtime":1612344960869,"results":"51","hashOfConfig":"42"},{"size":5950,"mtime":1613199319775,"results":"52","hashOfConfig":"42"},{"size":347,"mtime":1612790642726,"results":"53","hashOfConfig":"42"},{"size":5868,"mtime":1613118810805,"results":"54","hashOfConfig":"42"},{"size":2237,"mtime":1613290337632,"results":"55","hashOfConfig":"42"},{"size":6754,"mtime":1613289690858,"results":"56","hashOfConfig":"42"},{"size":601,"mtime":1611785619952,"results":"57","hashOfConfig":"42"},{"size":1375,"mtime":1613123150875,"results":"58","hashOfConfig":"42"},{"size":86,"mtime":1611912361576,"results":"59","hashOfConfig":"42"},{"size":2132,"mtime":1612003440369,"results":"60","hashOfConfig":"42"},{"size":4032,"mtime":1612949128224,"results":"61","hashOfConfig":"42"},{"size":3461,"mtime":1613224786632,"results":"62","hashOfConfig":"42"},{"size":1959,"mtime":1612751442576,"results":"63","hashOfConfig":"42"},{"size":1364,"mtime":1613123159877,"results":"64","hashOfConfig":"42"},{"size":2192,"mtime":1612954378697,"results":"65","hashOfConfig":"42"},{"size":10469,"mtime":1613270560447,"results":"66","hashOfConfig":"42"},{"size":10227,"mtime":1613203789830,"results":"67","hashOfConfig":"42"},{"size":1017,"mtime":1613209471612,"results":"68","hashOfConfig":"42"},{"size":5668,"mtime":1612041676069,"results":"69","hashOfConfig":"42"},{"size":7859,"mtime":1612969008398,"results":"70","hashOfConfig":"42"},{"size":1711,"mtime":1613188171621,"results":"71","hashOfConfig":"42"},{"size":370,"mtime":1612842182134,"results":"72","hashOfConfig":"42"},{"size":3040,"mtime":1613290399430,"results":"73","hashOfConfig":"42"},{"size":5044,"mtime":1613123464476,"results":"74","hashOfConfig":"42"},{"size":369,"mtime":1612076198705,"results":"75","hashOfConfig":"42"},{"size":2890,"mtime":1613263866609,"results":"76","hashOfConfig":"42"},{"size":4386,"mtime":1613295021915,"results":"77","hashOfConfig":"42"},{"size":1721,"mtime":1613229273864,"results":"78","hashOfConfig":"42"},{"size":400,"mtime":1613198738868,"results":"79","hashOfConfig":"42"},{"size":543,"mtime":1613122282332,"results":"80","hashOfConfig":"42"},{"size":488,"mtime":1612948891756,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1uc4s6b",{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"113"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"113"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"180"},"D:\\Projek\\fullstack javascript\\wow\\src\\index.js",[],["181","182"],"D:\\Projek\\fullstack javascript\\wow\\src\\pages\\App.js",["183"],"D:\\Projek\\fullstack javascript\\wow\\src\\pages\\Landing\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\assets\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\configs\\Routes\\index.js",["184"],"import {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\n\r\n// components\r\nimport { Logout } from \"../../components\";\r\nimport { Landing, Home, Dashboard } from \"../../pages\";\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PrivateRouteAdmin from './PrivateRouteAdmin';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Router>\r\n            {/* <Switch> */}\r\n                {/* <Route path=\"/dashboard\">\r\n                    <Dashboard />\r\n                </Route> */}\r\n\r\n                <Route exact path=\"/\">\r\n                    <Landing />\r\n                </Route>\r\n\r\n                <Route exact path=\"/logout\">\r\n                    <Logout />\r\n                </Route>\r\n\r\n                {/* <Route path=\"/user\">\r\n                    <Home />\r\n                </Route> */}\r\n                \r\n\r\n                <PrivateRoute path=\"/user\" component={Home} />\r\n                <PrivateRouteAdmin path=\"/admin\" component={Dashboard} />\r\n                \r\n            {/* </Switch> */}\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Buttons\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\pages\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Auth\\Register.js",["185","186"],"import React, { Fragment, useState, useContext, useEffect } from 'react'\r\nimport { Col, Container, Form, Modal, Row } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// component\r\nimport {Buttons, Inputs} from '../../';// same ../../index.js take file Buttons\r\nimport {AppContext, API, setAuthToken} from '../../../configs';\r\n\r\n// json Fake Data\r\nimport {Users} from '../../../FakeData';\r\n\r\n// styling\r\nimport \"./Auth.css\";\r\n\r\nconst Register = ({titleModal, classModalButton  }) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [state, dispatch] = useContext(AppContext);\r\n\r\n    const [show, setShow] = useState(false);\r\n    \r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    // set modal login when user click link\r\n    const handleLogin = () => {\r\n        handleClose();\r\n        dispatch({\r\n            type: \"MODAL_LOGIN\",\r\n            payload : !state.modalLogin\r\n        });\r\n    }\r\n    // set modal login when user click link\r\n\r\n    // set login from another modal\r\n    useEffect(() => {\r\n        if (state.modalRegister) {\r\n            handleShow();\r\n            dispatch({\r\n                type:\"MODAL_REGISTER\",\r\n                payload : !state.modalRegister\r\n            })\r\n        }\r\n    }, [state.modalRegister])\r\n    // set login from another modal\r\n\r\n\r\n    // ======================================================\r\n    // set modal for Register failed\r\n    const [registerFailed, setRegisterFailed] = useState(false);\r\n    const [messageFailed, setMessageFailed] = useState(\"\");\r\n    \r\n    const handleCloseRegisterFailed = () => setRegisterFailed(false);\r\n    const handleRegisterFailed = () => setRegisterFailed(true);\r\n    // set modal for Register failed\r\n    // ======================================================\r\n\r\n    // ======================================================\r\n    // process register\r\n\r\n    const [formDataRegister, setFormDataRegister] = useState({\r\n        email: '',\r\n        password : '',\r\n        fullname : ''\r\n    });\r\n    \r\n    \r\n    const handleChangeRegister=(e)=> {\r\n        setFormDataRegister({\r\n            ...formDataRegister, [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    const {email, password, fullname} = formDataRegister;\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const body = JSON.stringify({email,password, fullname});\r\n\r\n            const config = {\r\n                headers : {\r\n                    \"Content-Type\": \"application/json\",\r\n                }\r\n            }\r\n\r\n            const response = await API.post('/register',body,config);\r\n\r\n            console.log(\"response register\", response);\r\n            const result = response.data.data.user;\r\n\r\n            if (response.status == 200) {\r\n                dispatch({\r\n                    type : \"AUTH\",\r\n                    payload: {\r\n                        id : result.id,\r\n                        fullname : result.fullname,\r\n                        avatar : null,\r\n                        role : 'user',\r\n                        token : result.token\r\n                    }\r\n                });\r\n\r\n                setAuthToken(result.token);\r\n                history.push('/user');\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(\"Your System Error : \", err);\r\n            setMessageFailed(\"Register Failed\")\r\n            handleRegisterFailed();\r\n        }\r\n    }\r\n    \r\n    // process Register\r\n    // ======================================================\r\n    \r\n    console.log(\"user dari register\",Users);\r\n    console.log(\"state dari register\",state);\r\n    // console.log(\"email register\",email);\r\n    // console.log(\"pass dari register\",password);\r\n    // console.log(\"fullname dari register\",fullname);\r\n    \r\n    return (\r\n        <Fragment>\r\n            {/* <Login titleModal=\"Sign sdf\" classModalButton=\"buttons-grey px-5 font-weight-bold\" /> */}\r\n            <Buttons onClick={handleShow} title={titleModal} className={classModalButton} />\r\n\r\n\r\n            <Modal show={show} onHide={handleClose} className=\"d-flex justify-content-center align-items-center\">\r\n                <Modal.Body >\r\n                    <Container>\r\n                        <Row className=\"my-3\">\r\n                            <Col md=\"12\">\r\n                                <h2 className=\"title-modal\">{titleModal}</h2>\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Inputs type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={e => handleChangeRegister(e)} />\r\n                                    <Inputs type=\"password\" placeholder=\"Password\" name=\"password\" onChange={e => handleChangeRegister(e)} />\r\n                                    <Inputs type=\"text\" placeholder=\"Full Name\" name=\"fullname\" value={fullname} onChange={e => handleChangeRegister(e)} />\r\n                                    <Buttons className=\"buttons-red btn-block font-weight-bold mt-2 mb-2\"  type=\"submit\" title={titleModal} />\r\n                                </Form>\r\n                                <div className=\"text-link\">\r\n                                    Already have an account ? Klik <b className=\"link-here\" \r\n                                    onClick={handleLogin}>Here</b>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            {/* component modal Register failed */}\r\n            <Modal size=\"lg\" show={registerFailed} onHide={handleCloseRegisterFailed} className=\"d-flex justify-content-center align-items-center\">\r\n                <Modal.Body >\r\n                    <p className=\"modal-failed\">{messageFailed}</p>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\index.js",[],["187","188"],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Auth\\Login.js",["189","190","191"],"import React, { Fragment, useState, useContext, useEffect } from 'react'\r\nimport { Col, Container, Form, Modal, Row } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// component\r\nimport {Buttons, Inputs} from '../../';// same ../../index.js take file Buttons\r\nimport {AppContext, API, setAuthToken} from '../../../configs';\r\n\r\n\r\n// json Fake Data\r\n// import FakeData from '../../../json/FakeData.json'\r\n// import {Users} from '../../../FakeData';\r\n\r\n// styling\r\nimport \"./Auth.css\";\r\n\r\nconst Login = ({titleModal, classModalButton, ...rest  }) => {\r\n    \r\n    const history = useHistory();\r\n\r\n    const [state, dispatch] = useContext(AppContext);\r\n\r\n    // ======================================================\r\n    // set variable show modal login in page\r\n    const [showLogin, setShowLogin] = useState(false);\r\n    \r\n    const handleCloseLogin = () => setShowLogin(false);\r\n    const handleShowLogin = () => setShowLogin(true);\r\n    // set variable show modal login in page\r\n    // ======================================================\r\n\r\n    // ======================================================\r\n    // set modal for login failed\r\n    const [loginFailed, setLoginFailed] = useState(false);\r\n    \r\n    const handleCloseLoginFailed = () => setLoginFailed(false);\r\n    const handleLoginFailed = () => setLoginFailed(true);\r\n    // set modal for login failed\r\n    // ======================================================\r\n\r\n    // ======================================================\r\n    // set modal register when user click link\r\n    const handleRegister = () => {\r\n        handleCloseLogin();\r\n        dispatch({\r\n            type: \"MODAL_REGISTER\",\r\n            payload : !state.modalRegister\r\n        });\r\n    }\r\n    // set modal register when user click link\r\n    // ======================================================\r\n\r\n    // ======================================================\r\n    // set login from another modal\r\n    useEffect(() => {\r\n        if (state.modalLogin) {\r\n            handleShowLogin();\r\n            dispatch({\r\n                type:\"MODAL_LOGIN\",\r\n                payload : !state.modalLogin\r\n            })\r\n        }\r\n    }, [state.modalLogin])\r\n    // set login from another modal\r\n    // ======================================================\r\n    \r\n    // ======================================================\r\n    // process login\r\n\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password : ''\r\n    });\r\n    \r\n    const handleChangeLogin=(e)=> {\r\n        setFormData({\r\n            ...formData, [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    \r\n    const {email, password} = formData;\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const body = JSON.stringify({ email, password });\r\n\r\n            const config = {\r\n                headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                },\r\n            };\r\n\r\n            const response = await API.post(\"/login\", body, config);\r\n\r\n            console.log(\"hasil response login\",response);     \r\n            const result = response.data.data.user;\r\n            if (response.status == 200) {\r\n                console.log(\"hasil response login\",response.data.data.user);                \r\n                    dispatch({\r\n                    type : \"AUTH\",\r\n                    payload: result\r\n                });\r\n\r\n                setAuthToken(result.token);\r\n\r\n                // cek role for redirect page where role user\r\n                if (result.role == \"admin\") {\r\n                    history.push('/admin');                \r\n                }else{\r\n                    history.push('/user');\r\n                }\r\n            }\r\n        } catch (err) {\r\n            handleLoginFailed();\r\n            console.log(\"error : \", err);            \r\n        }\r\n    }\r\n    \r\n    // process login\r\n    // ======================================================\r\n\r\n    \r\n    \r\n    return (\r\n        <Fragment>\r\n            <Buttons onClick={handleShowLogin} title={titleModal} className={classModalButton} />\r\n\r\n            <Modal show={showLogin} onHide={handleCloseLogin} className=\"d-flex justify-content-center align-items-center\">\r\n                <Modal.Body >\r\n                    <Container>\r\n                        <Row className=\"my-3\">\r\n                            <Col md=\"12\">\r\n                                <h2 className=\"title-modal\">{titleModal}</h2>\r\n                                <Form onSubmit={handleSubmit}>\r\n                                    <Inputs type=\"email\" placeholder=\"Email\" name=\"email\" value={email} onChange={e => handleChangeLogin(e)} />\r\n                                    <Inputs type=\"password\" placeholder=\"Password\" name=\"password\" onChange={e => handleChangeLogin(e)} />\r\n                                    <Buttons className=\"buttons-red btn-block font-weight-bold mt-2 mb-2\"  type=\"submit\" title={titleModal} />\r\n                                </Form>\r\n                                <div className=\"text-link\">\r\n                                    Don't have an account ? Klik <b className=\"link-here\" \r\n                                    onClick={handleRegister}>Here</b>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n\r\n\r\n            {/* component modal login failed */}\r\n            <Modal size=\"lg\" show={loginFailed} onHide={handleCloseLoginFailed} className=\"d-flex justify-content-center align-items-center\">\r\n                <Modal.Body >\r\n                    <p className=\"modal-failed\">Login Failed</p>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n",["192","193"],"D:\\Projek\\fullstack javascript\\wow\\src\\configs\\Context\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\pages\\Home\\index.js",["194","195","196","197","198","199","200","201"],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Inputs\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\configs\\Routes\\PrivateRoute.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\FakeData\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\FakeData\\Users\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Sidebar\\index.js",["202","203","204","205","206"],"import React, { Fragment, useContext, useEffect, useState } from 'react';\r\nimport { Container,Row,Col } from 'react-bootstrap';\r\nimport {\r\n    useLocation,\r\n    useRouteMatch,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\n// component\r\nimport {AppContext} from '../../../configs';\r\n\r\n// images\r\nimport {LogoSidebar, Avatar} from '../../../assets'\r\n\r\n// styling\r\nimport \"./Sidebar.css\";\r\n\r\n// font awesome\r\n// get our fontawesome imports\r\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faFileInvoiceDollar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Sidebar = () => {\r\n\r\n    let location = useLocation();\r\n    console.log(\"location sidebar\", location);\r\n\r\n    let { path, url } = useRouteMatch();\r\n\r\n    const [state] = useContext(AppContext);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <Row className=\"d-flex justify-content-center mt-n2 mb-3\">\r\n                    <Col className=\"text-center\">\r\n                        <Link to=\"/user\" className=\"sidebar-link\">\r\n                            <img src={LogoSidebar} alt=\"logo\" />\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"d-flex justify-content-center mb-4\">\r\n                    <Col className=\"text-center \">\r\n                        <img src={state.avatar === null ? Avatar : state.avatar} alt=\"avatar\" className=\"sidebar-avatar rounded-circle shadow\" />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"d-flex justify-content-center mb-4\">\r\n                    <Col className=\"text-center \">\r\n                        <h3 className=\"sidebar-fullname\">{state.fullname}</h3>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"d-flex justify-content-center\">\r\n                    <Col className=\"text-center \">\r\n                        {\r\n                            state.payment ? (\r\n                                <p className=\"sidebar-status-subscribed\">Subscribed</p>\r\n                            ): (\r\n                                <p className=\"sidebar-status-not\">Not Subscribed Yet </p>\r\n                            )\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <hr className=\"sidebar-hr\"></hr>\r\n\r\n                <Row className=\"d-flex justify-content-center sidebar-menu-length\">\r\n                    <Col>\r\n                    {/* <Link to={`${url}/profile`}>Profile</Link> */}\r\n                        <Link to={`${url}/profile`} className={location.pathname == `${url}/profile` ? \"sidebar-link sidebar-active\" : \"sidebar-link\"} >\r\n                            <p> <FontAwesomeIcon icon={faUser} className=\"sidebar-icon\" />  Profile</p>                            \r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className=\"d-flex justify-content-center mb-5\">\r\n                    <Col>\r\n                        <Link to={`${url}/subscribe`} className={location.pathname == `${url}/subscribe` ? \"sidebar-link sidebar-active\" : \"sidebar-link\"}>\r\n                            <p> <FontAwesomeIcon icon={faFileInvoiceDollar} className=\"sidebar-icon\" />  Subscribe</p>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <hr className=\"sidebar-hr\"></hr>\r\n\r\n                <Row className=\"d-flex justify-content-center sidebar-menu-length\">\r\n                    <Col>\r\n                        <Link to=\"/logout\" className=\"sidebar-link\">\r\n                            <p className=\"sidebar-menu\"> <FontAwesomeIcon icon={faSignOutAlt} className=\"sidebar-icon\" />  Logout</p>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\MainContent\\index.js",["207","208"],"import React, { Fragment, useContext, useState, useEffect } from 'react';\r\nimport { Col, Container, Row, Modal } from 'react-bootstrap';\r\nimport {useHistory, useRouteMatch,} from \"react-router-dom\";\r\n\r\n// component\r\nimport {AppContext, API} from '../../../configs'\r\nimport {HeroImage} from '../';\r\nimport {Loading} from '../../../components';\r\n\r\n\r\n// FakeData\r\n// import {Books} from '../../../FakeData';\r\n\r\n// stying\r\nimport './MainContent.css';\r\n\r\nconst MainContent = (props) => {\r\n\r\n    const history = useHistory();\r\n    \r\n    let { path, url } = useRouteMatch();\r\n    \r\n    const [state] = useContext(AppContext);\r\n\r\n    const [books, setBooks] = useState([]);\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    // ======================================================\r\n    // set modal for login failed\r\n    const [detailBookFailed, setDetailBookFailed] = useState(false);\r\n    const [messageFailed, setMessageFailed] = useState(\"\");\r\n    \r\n    const handleCloseDetailBookFailed = () => setDetailBookFailed(false);\r\n    const handleDetailBookFailed = () => setDetailBookFailed(true);\r\n    // set modal for DetailBook failed\r\n    // ======================================================\r\n    \r\n\r\n    const handleListBook = (id) => {\r\n        if (!state.payment) {\r\n            handleDetailBookFailed();\r\n            setMessageFailed(\"please make a payment to read the latest books\");\r\n        }else{\r\n            history.push(`${url}/book/detail/${id}`)\r\n        }\r\n    }\r\n\r\n    const loadBook = async () => {\r\n        try {\r\n            const response = await API('/books');\r\n            console.log(\"response books\", response);\r\n            if (response.status == 200) {\r\n                setBooks(response.data.data.books);\r\n                setLoading(false);\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Your System \", err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadBook();\r\n    }, [])\r\n\r\n\r\n    console.log(\"match from home\", props.matchRouter);\r\n    console.log(\"url from maincontent\", url);\r\n\r\n    console.log(\"books \", books);\r\n    return isLoading ? (<Loading className=\"d-flex justify-content-center align-items-center\" />) : (\r\n        <Fragment>\r\n            <Container >\r\n\r\n                <HeroImage image={books[books.length - 1].thumbnail}  />\r\n\r\n                \r\n                <h3 className=\"title-list\">List Books</h3>\r\n                <Row>\r\n                    {\r\n                        books.map(book => (\r\n                            <Col sm=\"12\" md=\"3\" key={book.id} style={{cursor: 'pointer'}} onClick={() => handleListBook(book.id)}>\r\n                                <img src={book.thumbnail} alt=\"list-books\" className=\"img-fluid list-books\" />\r\n                                <p className=\"font-weight-bold mb-1 mt-3 text-truncate\">{book.title}</p>\r\n                                <p className=\"text-muted\">{book.author}</p>\r\n                            </Col>\r\n                        )).reverse()\r\n                    }\r\n                </Row>\r\n            </Container>\r\n\r\n            {/* modal failed */}\r\n            <Modal size=\"lg\" show={detailBookFailed} onHide={handleCloseDetailBookFailed} className=\"d-flex justify-content-center align-items-center\">\r\n                <Modal.Body >\r\n                    <p className=\"modal-failed\">{messageFailed}</p>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MainContent\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\pages\\Dashboard\\index.js",["209","210","211","212"],"import React, { Fragment } from 'react'\r\nimport { Container} from 'react-bootstrap'\r\nimport { \r\n    BrowserRouter as Router, \r\n    Link,\r\n    Switch, \r\n    Route, \r\n    useRouteMatch,\r\n    useLocation,\r\n    useHistory,\r\n    useParams } from 'react-router-dom';\r\n\r\n// components\r\nimport { Navbars, Transactions, AddBook } from '../../components'\r\nimport { PrivateRouteAdmin } from '../../configs';\r\n\r\n// styling\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n    let paramId = useParams();\r\n\r\n    let history = useHistory();\r\n\r\n    let location = useLocation();\r\n\r\n    let { path, url } = useRouteMatch();\r\n\r\n    console.log(\"path di dashboard\", path);\r\n    console.log(\"url di dashboard\", url);\r\n    console.log(\"parameter di dashboard\", paramId);\r\n    console.log(\"location di dashboard\", location);\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            \r\n            {/* <Router> */}\r\n                <Navbars />\r\n                <Container className=\"mt-4\">\r\n                        <Switch>\r\n                            <PrivateRouteAdmin exact path={path} component={Transactions} />\r\n                            <PrivateRouteAdmin exact path={`${path}/:paramId`} component={Main} />\r\n                        </Switch>\r\n                    \r\n                </Container>                \r\n            {/* </Router> */}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst Main =()=> {\r\n    let { paramId } = useParams();\r\n    let { path, url } = useRouteMatch();\r\n    let location = useLocation();\r\n    console.log(\"location Main\", location);\r\n\r\n    // console.log('parameter topicId', paramId);\r\n    console.log(\"path di home Tes\", path);\r\n    console.log(\"url di home Tes\", url);\r\n\r\n\r\n    if (location.pathname === \"/admin/addBook\") {\r\n        return(\r\n            <AddBook />\r\n        );\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n            <h3>{paramId} tes halaman</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\Routes\\PrivateRouteAdmin.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Navbars\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Transactions\\index.js",["213","214","215","216","217","218","219"],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Book\\AddBook.js",["220","221","222","223","224"],"import React, { Fragment, useState } from 'react';\r\nimport { Col, Container, Row, Modal, Form, ProgressBar } from 'react-bootstrap';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n// utils CKEDITOR\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\n// component\r\nimport {API} from '../../../configs';\r\nimport { Inputs,Uploads, Buttons } from '../../atoms';\r\nimport { AddBooks } from '../../../assets';\r\n\r\n\r\n// styling\r\nimport \"./AddBook.css\";\r\n\r\nconst AddBook = () => {\r\n    \r\n    const [fileBook, setFileBook] = useState({ preview: \"\", raw: \"\" });\r\n    const [image, setImage] = useState({ preview: \"\", raw: \"\" });\r\n    // set progres upload file\r\n    const [progressUpload, setProgressUpload] = useState(0);\r\n\r\n    const [book, setBook] = useState({\r\n        title : \"\",\r\n        publication : \"\",\r\n        pages : \"\",\r\n        author : \"\",\r\n        isbn : \"\",\r\n        about : \"\"\r\n    });\r\n\r\n    \r\n    const handleChangeBook = (e) => {\r\n        setBook({...book,  [e.target.name] : e.target.value})\r\n    }\r\n\r\n    // ==============================================================\r\n    // fileBook book\r\n    \r\n    const handleFileBookTransaction = (e) => {\r\n        if (e.target.files.length) {\r\n            if (e.target.files[0].type == \"application/epub+zip\") {\r\n                setFileBook({\r\n                    preview : e.target.files[0].name,\r\n                    raw : e.target.files[0]\r\n                })\r\n            }\r\n        }\r\n        \r\n        console.log(\"file book\",fileBook);\r\n        console.log(\" e.target.files filebook\",  e.target.files);\r\n    }\r\n    // fileBook book\r\n    // ==============================================================\r\n\r\n    // ==============================================================\r\n    // image book\r\n    \r\n    const handleImageTransaction = (e) => {\r\n        if (e.target.files.length) {\r\n            setImage({\r\n                preview : URL.createObjectURL(e.target.files[0]),\r\n                raw : e.target.files[0]\r\n            })\r\n        }\r\n\r\n        console.log(\"image\", image);\r\n        console.log(\" e.target.files image\",  e.target.files[0].type);\r\n    }\r\n    // image book\r\n    // ==============================================================\r\n\r\n\r\n    const handleCKEditor = ( event, editor ) => {\r\n        const data = editor.getData();\r\n        // console.log( { event, editor, data } );\r\n        setBook({...book,about : data});\r\n    }\r\n\r\n    // state modal image\r\n    const [imageModal, setImageModal] = useState(false);\r\n    const handleCloseImage = () => setImageModal(false);\r\n    const handleShowModalImage = () => setImageModal(true);\r\n    // state modal image\r\n    \r\n    // modal Book Success\r\n    const [modalBook, setModalBook] = useState(false);    \r\n    const handleCloseModalBook = () => setModalBook(false);\r\n    const handleShowModalBook = () => setModalBook(true);\r\n    // modal Book Success\r\n\r\n    // modal post failed\r\n    const [modalFailed, setModalFailed] = useState(false);\r\n    const toggleFailed = () => setModalFailed(!modalFailed);\r\n    // modal post failed\r\n\r\n    // modal progress uplaod\r\n    const [modalProgressUpload, setmodalProgressUpload] = useState(false);    \r\n    const toggleProgressUpload = () => setmodalProgressUpload(!modalProgressUpload);\r\n    // modal progress uplaod\r\n    \r\n    const { title,\r\n        publication,\r\n        pages,\r\n        author,\r\n        isbn,\r\n        about \r\n    } = book;\r\n\r\n    const handleOnSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n\r\n            const body = new FormData();\r\n\r\n            body.append(\"title\", title);\r\n            body.append(\"publicationDate\", publication);\r\n            body.append(\"pages\", pages);\r\n            body.append(\"author\", author);\r\n            body.append(\"isbn\", isbn);\r\n            body.append(\"about\", about);\r\n\r\n            if (fileBook.raw) {\r\n                body.append(\"bookFile\", fileBook.raw);\r\n                // body.append(\"image\", imagePost[0]);\r\n            }else{\r\n                return setModalFailed(true);\r\n            }\r\n\r\n            if (fileBook.raw) {\r\n                body.append(\"thumbnail\", image.raw);\r\n                // body.append(\"image\", imagePost[0]);\r\n            }else{\r\n                return setModalFailed(true);\r\n            }\r\n\r\n            console.log(\"body book\", body);\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"content-type\": \"multipart/form-data\",\r\n                },\r\n                onUploadProgress: progressEvent => {\r\n                    console.log(\"loaded : \", progressUpload.loaded);\r\n                    console.log(\"total : \", progressUpload.total);\r\n                    let percentage = Math.floor((progressEvent.loaded / progressEvent.total) * 100);\r\n                    setProgressUpload(percentage);\r\n\r\n                    if (percentage <= 100) {\r\n                    setmodalProgressUpload(true);\r\n                    }\r\n                }\r\n            };\r\n\r\n            const response = await API.post('/book', body, config);\r\n\r\n            console.log(\"response book \", response);\r\n            if (response.status == 200) {\r\n                setModalBook(true);\r\n                \r\n                setTimeout(() => {\r\n                    setProgressUpload(0);\r\n                }, 1000)\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(\"Your System \", err);\r\n        }\r\n    }\r\n\r\n    console.log(\"state book \", book);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <h3 className=\"title-AddBook\">Add Book</h3>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <Form onSubmit={handleOnSubmit}>\r\n                            <Inputs type=\"text\" placeholder=\"Title\" name=\"title\" onChange={handleChangeBook} />\r\n                            <Inputs type=\"date\" placeholder=\"Publication Date\" onChange={handleChangeBook} name=\"publication\" />\r\n                            <Inputs type=\"text\" placeholder=\"Pages\" onChange={handleChangeBook} name=\"pages\" />\r\n                            <Inputs type=\"text\" placeholder=\"Author\" onChange={handleChangeBook} name=\"author\" />\r\n                            <Inputs type=\"text\" placeholder=\"ISBN\" onChange={handleChangeBook} name=\"isbn\" />\r\n                            \r\n                            <CKEditor\r\n                                editor={ ClassicEditor }\r\n                                config={{placeholder: \"About This Book...\"}} \r\n                                data=\"\"\r\n                                onReady={ editor => {\r\n                                    // You can store the \"editor\" and use when it is needed.\r\n                                    // console.log( 'Editor is ready to use!', editor );\r\n                                } }\r\n                                onChange={ handleCKEditor }\r\n                                onBlur={ ( event, editor ) => {\r\n                                    // console.log( 'Blur.', editor );\r\n                                } }\r\n                                onFocus={ ( event, editor ) => {\r\n                                    // console.log( 'Focus.', editor );\r\n                                } }\r\n                            />\r\n\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <Uploads onChange={handleFileBookTransaction} className=\"mt-3 w-25 add-book\" title=\"Attach Book File\" classNameTitleBook=\"title-book\" />\r\n\r\n                                {\r\n                                    fileBook.preview && (\r\n                                        <p className=\"ml-3 mt-3\">{fileBook.preview}</p>\r\n                                    )\r\n                                }\r\n                            </div>\r\n\r\n                            <div className=\"d-flex\">\r\n\r\n                                <Uploads onChange={handleImageTransaction} className=\"w-25 add-book\" title=\"Thumbnile Book\"/>\r\n\r\n                                {\r\n                                    image.preview && (\r\n                                        <img src={image.preview} alt=\"Book\" width=\"50px\" height=\"50px\" className=\"text-center ml-3 mt-2\" style={{cursor:\"pointer\"}} onClick={handleShowModalImage} onChange={handleImageTransaction}></img>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-end mb-5\">\r\n                                <Buttons className=\"buttons-red font-weight-bold mt-2 mb-2\"  type=\"submit\" title=\"Add Book\" icon={AddBooks} />\r\n                            </div>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n\r\n\r\n            <Modal size=\"lg\" show={modalBook} onHide={handleCloseModalBook} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                <Modal.Body >\r\n                    <p style={{color:\"#469F74\", fontSize:\"24px\", fontWeight:\"normal\", margin:\"auto\", textAlign:\"center\"}}>Book Success Created</p>\r\n                </Modal.Body>\r\n                {\r\n                    modalBook == false ? (\r\n                    <Redirect to=\"/admin\" />\r\n                    ) : null\r\n                }\r\n            </Modal>\r\n\r\n            <Modal size=\"lg\" dialogClassName=\"modal-90w\" show={modalProgressUpload} onHide={toggleProgressUpload} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                <Modal.Body >\r\n                    <div className=\"text-center\">{progressUpload}%</div>\r\n                    {/* <Progress value={progressUpload} /> */}\r\n                    <ProgressBar animated now={progressUpload} />\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n\r\n            <Modal size=\"lg\" show={imageModal} onHide={handleCloseImage} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                <Modal.Body >\r\n                    <img src={image.preview} alt=\"attach file\" className=\"text-center img-fluid\" />\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AddBook\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\HeroImage\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\FakeData\\Books\\index.js",[],["225","226"],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Subscribe\\index.js",["227","228","229","230","231"],"import React, { Fragment, useState, useContext } from 'react';\r\nimport { Row, Col, Container, Form, Modal, ProgressBar } from 'react-bootstrap';\r\nimport { useHistory,Redirect} from 'react-router-dom';\r\n\r\n// component\r\nimport {AppContext, API} from '../../../configs';\r\nimport {Inputs, Buttons} from '../../../components'\r\n\r\n// images\r\nimport {Wow} from '../../../assets';\r\nimport { Uploads } from '../../atoms';\r\n\r\n// styling\r\nimport \"./Subscribe.css\";\r\n\r\nconst Subscribe = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [state, dispatch] = useContext(AppContext);\r\n\r\n    // setModal Main\r\n    const [showModal, setShowModal] = useState(false);\r\n    const handleClose = () => setShowModal(false);\r\n    const handleShowModal = () => setShowModal(true);\r\n    // setModal Main\r\n    \r\n    \r\n    const [descModalSuccess, setDescModalSuccess] = useState(\"\");\r\n    const [descModalFailed, setDescModalFailed] = useState(\"\");\r\n    \r\n    // set progres upload file\r\n    const [progressUpload, setProgressUpload] = useState(0);\r\n    \r\n    // state modal image\r\n    const [imageModal, setImageModal] = useState(false);\r\n    const handleCloseImage = () => setImageModal(false);\r\n    const handleShowModalImage = () => setImageModal(true);\r\n    // state modal image\r\n    \r\n\r\n    // modal progress uplaod\r\n    const [modalProgressUpload, setmodalProgressUpload] = useState(false);    \r\n    const toggleProgressUpload = () => setmodalProgressUpload(!modalProgressUpload);\r\n    // modal progress uplaod\r\n\r\n    const [account, setAccount] = useState('')\r\n\r\n    const handleChangeAccount = (e) => {\r\n        setAccount(e.target.value)\r\n    }\r\n\r\n    // ==============================================================\r\n    // attachment\r\n    const [image, setImage] = useState({ preview: \"\", raw: \"\" });\r\n    \r\n    const handleImageTransaction = (e) => {\r\n        if (e.target.files.length) {\r\n            setImage({\r\n            preview : URL.createObjectURL(e.target.files[0]),\r\n            raw : e.target.files[0]\r\n        })\r\n    }\r\n    }\r\n    // attachment\r\n    // ==============================================================\r\n    \r\n\r\n    // ==============================================================\r\n    // submit payment\r\n    const handlePayment = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n\r\n            console.log(\"account number\", account);\r\n            const body = new FormData();\r\n            body.append(\"numberAccount\", account);\r\n\r\n            if (image.raw !== \"\") {\r\n                body.append(\"transferProof\", image.raw);                \r\n            }else{\r\n                setDescModalFailed(\"Please upload file payment transfer\");\r\n\r\n                handleShowModal();\r\n            }\r\n\r\n            console.log(\"image prev\", image);\r\n\r\n            console.log(\"body input \", body);\r\n\r\n            const config = {\r\n                headers: {\r\n                    \"content-type\": \"multipart/form-data\",\r\n                },\r\n\r\n                onUploadProgress: progressEvent => {\r\n                    console.log(\"loaded : \", progressUpload.loaded);\r\n                    console.log(\"total : \", progressUpload.total);\r\n                    let percentage = Math.floor((progressEvent.loaded / progressEvent.total) * 100);\r\n                    setProgressUpload(percentage);\r\n\r\n                    if (percentage <= 100) {\r\n                    setmodalProgressUpload(true);\r\n                    }\r\n                }\r\n            };\r\n\r\n            console.log(\"config input \", config);\r\n\r\n            const response = await API.post(\"/transaction\", body, config);\r\n            if (response.status == 200) {\r\n\r\n                // setmodalPost(true);\r\n                // dispatch({\r\n                //     type : \"USER_LOADED\",\r\n                //     payload : state\r\n                // })\r\n\r\n                setDescModalSuccess(\"Thank you for subscribing to premium, your premium package will be active after our admin approves your transaction, thank you\");\r\n\r\n                handleShowModal();\r\n\r\n                // setLoading(false);\r\n                setTimeout(() => {\r\n                    setProgressUpload(0);\r\n                }, 1000)\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(\"Your System Error : \", err);\r\n        }\r\n    }\r\n    // submit payment\r\n    // ==============================================================\r\n\r\n    console.log('image', image);\r\n    console.log('data change input number', account);\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <Row className=\"d-flex justify-content-center align-items-center vh-100\">\r\n                    <Col md=\"6\" className=\"text-center\">\r\n                        <h3 className=\"title-subscribe m-0 p-0\">Premium</h3>\r\n                        <div className=\"desc-subscribe\">\r\n                            <p className=\"d-inline\">Pay now and access all the latest books from </p>\r\n                            <img src={Wow} alt=\"icon\" />\r\n                        </div>\r\n                        <div className=\"account-subscribe\">\r\n                            <img src={Wow} alt=\"icon\" />\r\n                            <p className=\"d-inline\">: 0981312323</p>\r\n                        </div>\r\n\r\n                        <Form onSubmit={handlePayment}>\r\n                            <Inputs type=\"text\" placeholder=\"Input Your Account Number\" name=\"numberAccount\" onChange={handleChangeAccount} />\r\n                            <Uploads onChange={handleImageTransaction} className=\"title-file-attachment\" title=\"Attache proof of transfer\" Subscribe=\"aktif\"/>\r\n\r\n                            {\r\n                                image.preview && (\r\n                                    <img src={image.preview} alt=\"attach file\" width=\"50px\" className=\"text-center\" style={{cursor:\"pointer\"}} onClick={handleShowModalImage} onChange={handleImageTransaction} />\r\n                                )\r\n                            }\r\n\r\n                            <Buttons className=\"buttons-red btn-block font-weight-bold mb-2 height-button-subscribe\"  type=\"submit\" title=\"Send\" />\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            {/* component modal */}\r\n            <Modal size=\"lg\" show={showModal} onHide={handleClose} className=\"d-flex justify-content-center align-items-center\">\r\n                <Modal.Body >\r\n                    {descModalSuccess !== \"\" ? (\r\n                        <p className=\"modal-subscribe\">{descModalSuccess}</p>\r\n                    ) :  (\r\n                        <p className=\"modal-subscribe-failed\">{descModalFailed}</p>\r\n                    )}\r\n                </Modal.Body>\r\n                {\r\n                    descModalSuccess !== \"\" ? \r\n                        showModal == false ? (\r\n                            <Redirect to=\"/user\" />\r\n                        ) : null\r\n\r\n                    : null\r\n                }\r\n            </Modal>\r\n\r\n            <Modal size=\"lg\" show={imageModal} onHide={handleCloseImage} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                <Modal.Body >\r\n                    <img src={image.preview} alt=\"attach file\" className=\"text-center img-fluid\" />\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal size=\"lg\" dialogClassName=\"modal-90w\" show={modalProgressUpload} onHide={toggleProgressUpload} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                <Modal.Body >\r\n                    <div className=\"text-center\">{progressUpload}%</div>\r\n                    {/* <Progress value={progressUpload} /> */}\r\n                    <ProgressBar animated now={progressUpload} />\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Subscribe\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Uploads\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Profile\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Profile\\ListBookProfile.js",["232","233","234"],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\Profile\\HeroProfile.js",["235"],"import React, { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n// component\r\nimport {AppContext, API} from '../../../configs';\r\nimport { Avatar,Envelope,Gender,Phone, Maps } from '../../../assets';\r\nimport Loading from '../../atoms/Loading';\r\n\r\n// styling\r\nimport \"./Profile.css\";\r\nimport { Buttons } from '../../atoms';\r\n\r\nconst HeroProfile = () => {\r\n    const [state] = useContext(AppContext);\r\n\r\n    const [detailUser, setDetailUser] =useState([]);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    // const user = Users.find(user => user.id == localStorage.getItem('id_user'));\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async ( )=> {\r\n            try {\r\n                const response = await API('/user');\r\n\r\n                if (response.status == 200) {\r\n                    setDetailUser(response.data.data.user);\r\n                    setIsLoading(false);\r\n                }\r\n            } catch (err) {\r\n                console.log(\"Your System Error : \", err);\r\n            }\r\n        }\r\n\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    console.log(\"state dari profile\", state);\r\n    console.log(\"user dari profile\", detailUser);\r\n    return isLoading ? (<Loading className=\"d-flex justify-content-center align-items-center\" />) : (\r\n        <Fragment>\r\n            <Container>\r\n                <h2 className=\"title-profile\">Profile</h2>\r\n\r\n                <Row>\r\n                    <Col sm=\"12\" md=\"12\">\r\n                        <div className=\"bg-profile\">\r\n\r\n                            <Row className=\"content-profile\">\r\n\r\n                                <Col md=\"9\">\r\n\r\n                                    <Row className=\"height-list-profile\">\r\n                                        <Col md=\"1\" className=\" d-flex justify-content-end align-items-center\">\r\n                                            <img src={Envelope} alt=\"email\" />\r\n                                        </Col>\r\n                                        <Col md=\"11\">\r\n                                            <span className=\" d-block\"> {detailUser.email}</span>\r\n                                            <small className=\"text-muted \">Email</small>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"height-list-profile\">\r\n                                        <Col md=\"1\" className=\" d-flex justify-content-end align-items-center\">\r\n                                            <img src={Gender} alt=\"gender\" />\r\n                                        </Col>\r\n                                        <Col md=\"11\">\r\n                                            <span className=\" d-block\"> {detailUser.gender}</span>\r\n                                            <small className=\"text-muted \">Gender</small>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    \r\n                                    <Row className=\"height-list-profile\">\r\n                                        <Col md=\"1\" className=\" d-flex justify-content-end align-items-center\">\r\n                                            <img src={Phone} alt=\"gender\" />\r\n                                        </Col>\r\n                                        <Col md=\"11\">\r\n                                            <span className=\" d-block\"> {detailUser.phone}</span>\r\n                                            <small className=\"text-muted \">Mobile phone</small>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Row className=\"height-list-profile\">\r\n                                        <Col md=\"1\" className=\" d-flex justify-content-end align-items-center\">\r\n                                            <img src={Maps} alt=\"gender\" />\r\n                                        </Col>\r\n                                        <Col md=\"11\">\r\n                                            <span className=\" d-block\"> {detailUser.address} </span>\r\n                                            <small className=\"text-muted \">Address</small>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </Col>\r\n\r\n                                <Col md=\"3\">\r\n                                    <img src={detailUser.avatar === null ? Avatar : detailUser.avatar} alt=\"profile_image\" className=\"image-profile img-fluid d-inline-block\" />\r\n\r\n                                    <Buttons className=\"buttons-red btn-block font-weight-bold mt-2 mb-2 d-block\"  type=\"submit\" title=\"Edit Profile\" />\r\n\r\n                                </Col>\r\n                                \r\n                            </Row>\r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default HeroProfile\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\DetailBook\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\DetailBook\\InfoDetailBook.js",["236","237","238"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport Moment from 'react-moment';\r\n\r\n// component\r\nimport {API} from '../../../configs';\r\nimport {Loading} from '../../';\r\n\r\n// styling\r\nimport './DetailBook.css';\r\n\r\nconst InfoDetailBook = () => {\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    const {id} = useParams();\r\n    console.log(\"log id dari info detail book \", id);\r\n\r\n    const [book, setBook] = useState([]);\r\n\r\n    // const book = Books.find(book => book.id == id);\r\n    const loadBookById = async () => {\r\n        try {\r\n            const response = await API(`/book/${id}`);\r\n\r\n            console.log(\"response getbook by id\", response);\r\n            if (response.status == 200) {\r\n                setBook(response.data.data.book);\r\n                setLoading(false);\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Your System \",err);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        loadBookById();\r\n    }, [])\r\n    \r\n    return isLoading ? (<Loading />) : (\r\n        <Fragment>\r\n            <Container>\r\n                <Row>\r\n                    <Col md=\"5\">\r\n                        <img src={book.thumbnail} alt=\"detail-book\" className=\"image-detail-book\" />\r\n                    </Col>\r\n                    <Col md=\"7\" className=\"mt-1\">\r\n                        <div className=\"container-detail-book\">\r\n                            <h2 className=\"title-detail-book m-0 p-0\">{book.title}</h2>\r\n                            <small className=\"author-detail-book\">{book.author}</small>\r\n                        </div>\r\n                        \r\n                        <div className=\"container-detail-book\">\r\n                            <h2 className=\"date-detail-book size-detail-book\">Publication Date</h2>\r\n                            <small className=\"sub-detail-book\">\r\n                                <Moment format='MMM YYYY'>{book.publicationDate}</Moment>\r\n                            </small>\r\n                        </div>\r\n                        \r\n                        <div className=\"container-detail-book\">\r\n                            <h2 className=\"pages-detail-book size-detail-book\">Page</h2>\r\n                            <small className=\"sub-detail-book\">{book.pages}</small>\r\n                        </div>\r\n                        \r\n                        <div className=\"container-detail-book\">\r\n                            <h2 className=\"isbn-detail-book size-detail-book\">ISBN</h2>\r\n                            <small className=\"sub-detail-book\">{book.isbn   }</small>\r\n                        </div>\r\n\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default InfoDetailBook\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\DetailBook\\AboutDetailBook.js",["239","240","241","242","243","244"],"import React, { Fragment,useState, useContext, useEffect } from 'react';\r\nimport { Container, Modal } from 'react-bootstrap';\r\nimport {\r\n    Link,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\n// styling\r\nimport \"./DetailBook.css\";\r\n\r\n// component\r\nimport {AppContext, API} from '../../../configs';\r\nimport {Buttons} from '../../';// same ../../index.js take file Buttons\r\nimport {Loading} from '../../';\r\n\r\n// images\r\nimport {RightClick, AddList} from '../../../assets'\r\n\r\nconst AboutDetailBook = () => {\r\n\r\n    const {id} = useParams();\r\n    console.log(\"log id dari about detail book \", id);\r\n\r\n    const [state, dispatch] = useContext(AppContext);\r\n\r\n    const [book, setBook] = useState([]);\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    // setModal Loading\r\n    const [showModalLoading, setShowModalLoading] = useState(false);\r\n    const handleCloseLoading = () => setShowModalLoading(false);\r\n    const handleShowModalLoading = () => setShowModalLoading(true);\r\n    // setModal Loading\r\n\r\n    // const book = Books.find(book => book.id == id);\r\n    const loadBookById = async () => {\r\n        try {\r\n            const response = await API(`/book/${id}`);\r\n\r\n            console.log(\"response getbook by id\", response);\r\n            if (response.status == 200) {\r\n                setBook(response.data.data.book);\r\n                setLoading(false);\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Your System \",err);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        loadBookById();\r\n    }, [])\r\n    \r\n\r\n    console.log(\"book from get book by id\",book);\r\n    const handleListBook = async (id) => {\r\n\r\n        const body = JSON.stringify({ id });\r\n\r\n        const config = {\r\n            headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        console.log(\"id dari about detail book\", id)\r\n        const response = await API.post('/bookuser', body, config);\r\n        console.log(\"response add list\", response);\r\n        handleShowModalLoading();\r\n        if (response.status == 200) {\r\n            dispatch({\r\n                type : \"ADD_LIST\",\r\n                payload : response.data.data.user.Books\r\n            })\r\n            handleCloseLoading();\r\n        }\r\n    };\r\n    \r\n    useEffect(() => {\r\n    }, [state.listBook])\r\n\r\n    console.log(\"state dari about detail book \", state);\r\n    console.log(\"state length dari about detail book \", state.listBook.length);\r\n\r\n    const activeAddList = state.listBook.map(list => book.id == list.id).filter(check => check == true );\r\n    console.log(\"hasil tes map\", activeAddList);\r\n\r\n    // const activeAddList = tes.filter(check => check == true );\r\n    // console.log(\"hasil tes filter\", activeAddList);\r\n    return isLoading ? (<Loading />) : (\r\n        <Fragment>\r\n            <Container>\r\n                <h3 className=\"title-AboutDetailBook\">About This Book</h3>\r\n\r\n                <p className=\"desc-AboutDetailBook\">\r\n                    {ReactHtmlParser(book.about)}\r\n                </p>\r\n\r\n                <div className=\"d-flex justify-content-end\">\r\n                    {\r\n                        state.listBook.length >= 0 && (\r\n\r\n                            // state.listBook.map(list => book.id != list.id)\r\n                            activeAddList.length == 0  ? (\r\n                                <Buttons className=\"buttons-red font-weight-bold mt-2 mb-2 mr-3\"  type=\"submit\" title=\"Add My List\" icon={AddList} onClick={() => handleListBook(book.id)} />\r\n                            ):null\r\n\r\n                        )\r\n                    }\r\n\r\n                    <Link to={`/user/book/read/${book.id}`}>\r\n                        <Buttons className=\"buttons-grey font-weight-bold mt-2 mb-2\"  type=\"submit\" title=\"Read Book\" icon={RightClick} />\r\n                    </Link>\r\n\r\n                </div>\r\n\r\n            </Container>\r\n\r\n            {/* ================================== */}\r\n            {/* modal loading */}\r\n            {/* ================================== */}\r\n            <Modal size=\"lg\" show={showModalLoading} className=\"d-flex justify-content-center align-items-center w-100\">\r\n                <Modal.Body >\r\n                    <Loading />\r\n                </Modal.Body>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AboutDetailBook\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\components\\molecules\\ReadBook\\index.js",["245","246"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { ReactReader } from \"react-reader\";\r\n\r\n// component\r\nimport {API} from '../../../configs';\r\nimport {Loading} from '../../../components';\r\n\r\nconst ReadBook = (props) => {\r\n    const {id} = useParams();\r\n\r\n    console.log(\"id read bok\", id);\r\n\r\n    const [book, setBook] = useState([]);\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    const loadBook = async () => {\r\n        try {\r\n            const response = await API(`/book/${id}`);\r\nconsole.log(\"response read book \", response);\r\n            if (response.status == 200) {\r\n                setBook(response.data.data.book);\r\n                setLoading(false);\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Your System \",err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadBook();\r\n    }, [])\r\n\r\n    console.log(\"book from read book\", book);\r\n\r\n    return isLoading ? (<Loading />) : (\r\n        <Fragment>\r\n                <Row className=\"vh-100\">\r\n                    <Col>\r\n                        <div style={{position:\"relative\", height: \"100%\"}}>\r\n                            {\" Read Book \"}\r\n                            <ReactReader\r\n                            url={book.bookFile}\r\n                            title={book.title}\r\n                            // location={\"epubcfi(/6/2[cover]!/6)\"}\r\n                            // locationChanged={epubcifi => console.log(epubcifi)}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ReadBook\r\n","D:\\Projek\\fullstack javascript\\wow\\src\\configs\\API\\index.js",[],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Loading\\index.js",[],["247","248"],"D:\\Projek\\fullstack javascript\\wow\\src\\components\\atoms\\Logout\\index.js",["249","250"],"import { useEffect, useContext, useState } from \"react\";\r\nimport { AppContext } from \"../../../configs\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Logout = () => {\r\n    const [state, dispatch] = useContext(AppContext);\r\n    const [isLogout, setIsLogout] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n        type: \"LOGOUT\",\r\n        });\r\n\r\n        setIsLogout(true);\r\n    }, []);\r\n\r\n    return isLogout && <Redirect to=\"/\" />;\r\n};\r\n\r\nexport default Logout;",["251","252"],{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","severity":1,"message":"258","line":45,"column":6,"nodeType":"259","endLine":45,"endColumn":8,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":3,"column":5,"nodeType":"263","messageId":"264","endLine":3,"endColumn":11},{"ruleId":"257","severity":1,"message":"265","line":46,"column":8,"nodeType":"259","endLine":46,"endColumn":29,"suggestions":"266"},{"ruleId":"267","severity":1,"message":"268","line":95,"column":33,"nodeType":"269","messageId":"270","endLine":95,"endColumn":35},{"ruleId":"253","replacedBy":"271"},{"ruleId":"255","replacedBy":"272"},{"ruleId":"257","severity":1,"message":"265","line":63,"column":8,"nodeType":"259","endLine":63,"endColumn":26,"suggestions":"273"},{"ruleId":"267","severity":1,"message":"268","line":99,"column":33,"nodeType":"269","messageId":"270","endLine":99,"endColumn":35},{"ruleId":"267","severity":1,"message":"268","line":109,"column":33,"nodeType":"269","messageId":"270","endLine":109,"endColumn":35},{"ruleId":"253","replacedBy":"274"},{"ruleId":"255","replacedBy":"275"},{"ruleId":"261","severity":1,"message":"276","line":21,"column":9,"nodeType":"263","messageId":"264","endLine":21,"endColumn":16},{"ruleId":"261","severity":1,"message":"277","line":27,"column":12,"nodeType":"263","messageId":"264","endLine":27,"endColumn":17},{"ruleId":"261","severity":1,"message":"278","line":29,"column":17,"nodeType":"263","messageId":"264","endLine":29,"endColumn":20},{"ruleId":"261","severity":1,"message":"279","line":38,"column":11,"nodeType":"263","messageId":"264","endLine":38,"endColumn":21},{"ruleId":"267","severity":1,"message":"268","line":52,"column":44,"nodeType":"269","messageId":"270","endLine":52,"endColumn":46},{"ruleId":"257","severity":1,"message":"258","line":69,"column":8,"nodeType":"259","endLine":69,"endColumn":10,"suggestions":"280"},{"ruleId":"267","severity":1,"message":"268","line":80,"column":41,"nodeType":"269","messageId":"270","endLine":80,"endColumn":43},{"ruleId":"257","severity":1,"message":"281","line":97,"column":8,"nodeType":"259","endLine":97,"endColumn":10,"suggestions":"282"},{"ruleId":"261","severity":1,"message":"283","line":1,"column":39,"nodeType":"263","messageId":"264","endLine":1,"endColumn":48},{"ruleId":"261","severity":1,"message":"284","line":1,"column":50,"nodeType":"263","messageId":"264","endLine":1,"endColumn":58},{"ruleId":"261","severity":1,"message":"285","line":30,"column":11,"nodeType":"263","messageId":"264","endLine":30,"endColumn":15},{"ruleId":"267","severity":1,"message":"268","line":71,"column":82,"nodeType":"269","messageId":"270","endLine":71,"endColumn":84},{"ruleId":"267","severity":1,"message":"268","line":79,"column":84,"nodeType":"269","messageId":"270","endLine":79,"endColumn":86},{"ruleId":"261","severity":1,"message":"285","line":21,"column":11,"nodeType":"263","messageId":"264","endLine":21,"endColumn":15},{"ruleId":"267","severity":1,"message":"268","line":53,"column":33,"nodeType":"269","messageId":"270","endLine":53,"endColumn":35},{"ruleId":"261","severity":1,"message":"286","line":4,"column":22,"nodeType":"263","messageId":"264","endLine":4,"endColumn":28},{"ruleId":"261","severity":1,"message":"287","line":5,"column":5,"nodeType":"263","messageId":"264","endLine":5,"endColumn":9},{"ruleId":"261","severity":1,"message":"288","line":7,"column":5,"nodeType":"263","messageId":"264","endLine":7,"endColumn":10},{"ruleId":"261","severity":1,"message":"289","line":23,"column":9,"nodeType":"263","messageId":"264","endLine":23,"endColumn":16},{"ruleId":"267","severity":1,"message":"268","line":50,"column":33,"nodeType":"269","messageId":"270","endLine":50,"endColumn":35},{"ruleId":"267","severity":1,"message":"268","line":64,"column":33,"nodeType":"269","messageId":"270","endLine":64,"endColumn":35},{"ruleId":"267","severity":1,"message":"268","line":105,"column":33,"nodeType":"269","messageId":"270","endLine":105,"endColumn":35},{"ruleId":"267","severity":1,"message":"268","line":153,"column":79,"nodeType":"269","messageId":"270","endLine":153,"endColumn":81},{"ruleId":"267","severity":1,"message":"268","line":156,"column":82,"nodeType":"269","messageId":"270","endLine":156,"endColumn":84},{"ruleId":"267","severity":1,"message":"268","line":156,"column":151,"nodeType":"269","messageId":"270","endLine":156,"endColumn":153},{"ruleId":"267","severity":1,"message":"268","line":160,"column":72,"nodeType":"269","messageId":"270","endLine":160,"endColumn":74},{"ruleId":"267","severity":1,"message":"268","line":44,"column":40,"nodeType":"269","messageId":"270","endLine":44,"endColumn":42},{"ruleId":"261","severity":1,"message":"290","line":91,"column":11,"nodeType":"263","messageId":"264","endLine":91,"endColumn":30},{"ruleId":"261","severity":1,"message":"291","line":96,"column":11,"nodeType":"263","messageId":"264","endLine":96,"endColumn":23},{"ruleId":"267","severity":1,"message":"268","line":161,"column":33,"nodeType":"269","messageId":"270","endLine":161,"endColumn":35},{"ruleId":"267","severity":1,"message":"268","line":242,"column":31,"nodeType":"269","messageId":"270","endLine":242,"endColumn":33},{"ruleId":"253","replacedBy":"292"},{"ruleId":"255","replacedBy":"293"},{"ruleId":"261","severity":1,"message":"289","line":18,"column":11,"nodeType":"263","messageId":"264","endLine":18,"endColumn":18},{"ruleId":"261","severity":1,"message":"277","line":20,"column":12,"nodeType":"263","messageId":"264","endLine":20,"endColumn":17},{"ruleId":"261","severity":1,"message":"294","line":20,"column":19,"nodeType":"263","messageId":"264","endLine":20,"endColumn":27},{"ruleId":"267","severity":1,"message":"268","line":112,"column":33,"nodeType":"269","messageId":"270","endLine":112,"endColumn":35},{"ruleId":"267","severity":1,"message":"268","line":181,"column":35,"nodeType":"269","messageId":"270","endLine":181,"endColumn":37},{"ruleId":"261","severity":1,"message":"283","line":1,"column":49,"nodeType":"263","messageId":"264","endLine":1,"endColumn":58},{"ruleId":"261","severity":1,"message":"285","line":14,"column":11,"nodeType":"263","messageId":"264","endLine":14,"endColumn":15},{"ruleId":"267","severity":1,"message":"268","line":52,"column":47,"nodeType":"269","messageId":"270","endLine":52,"endColumn":49},{"ruleId":"267","severity":1,"message":"268","line":27,"column":37,"nodeType":"269","messageId":"270","endLine":27,"endColumn":39},{"ruleId":"261","severity":1,"message":"295","line":6,"column":8,"nodeType":"263","messageId":"264","endLine":6,"endColumn":14},{"ruleId":"267","severity":1,"message":"268","line":31,"column":33,"nodeType":"269","messageId":"270","endLine":31,"endColumn":35},{"ruleId":"257","severity":1,"message":"296","line":43,"column":8,"nodeType":"259","endLine":43,"endColumn":10,"suggestions":"297"},{"ruleId":"267","severity":1,"message":"268","line":43,"column":33,"nodeType":"269","messageId":"270","endLine":43,"endColumn":35},{"ruleId":"257","severity":1,"message":"296","line":55,"column":8,"nodeType":"259","endLine":55,"endColumn":10,"suggestions":"298"},{"ruleId":"267","severity":1,"message":"268","line":73,"column":29,"nodeType":"269","messageId":"270","endLine":73,"endColumn":31},{"ruleId":"267","severity":1,"message":"268","line":88,"column":62,"nodeType":"269","messageId":"270","endLine":88,"endColumn":64},{"ruleId":"267","severity":1,"message":"268","line":88,"column":96,"nodeType":"269","messageId":"270","endLine":88,"endColumn":98},{"ruleId":"267","severity":1,"message":"268","line":107,"column":50,"nodeType":"269","messageId":"270","endLine":107,"endColumn":52},{"ruleId":"267","severity":1,"message":"268","line":23,"column":33,"nodeType":"269","messageId":"270","endLine":23,"endColumn":35},{"ruleId":"257","severity":1,"message":"299","line":34,"column":8,"nodeType":"259","endLine":34,"endColumn":10,"suggestions":"300"},{"ruleId":"253","replacedBy":"301"},{"ruleId":"255","replacedBy":"302"},{"ruleId":"261","severity":1,"message":"277","line":6,"column":12,"nodeType":"263","messageId":"264","endLine":6,"endColumn":17},{"ruleId":"257","severity":1,"message":"265","line":15,"column":8,"nodeType":"259","endLine":15,"endColumn":10,"suggestions":"303"},{"ruleId":"253","replacedBy":"304"},{"ruleId":"255","replacedBy":"305"},"no-native-reassign",["306"],"no-negated-in-lhs",["307"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["308"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["309"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["306"],["307"],["310"],["306"],["307"],"'paramId' is assigned a value but never used.","'state' is assigned a value but never used.","'url' is assigned a value but never used.","'ConsoleLog' is assigned a value but never used.",["311"],"React Hook useEffect has a missing dependency: 'loadBookUser'. Either include it or remove the dependency array.",["312"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'path' is assigned a value but never used.","'Router' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'history' is assigned a value but never used.","'handleShowModalBook' is assigned a value but never used.","'toggleFailed' is assigned a value but never used.",["306"],["307"],"'dispatch' is assigned a value but never used.","'moment' is defined but never used.","React Hook useEffect has a missing dependency: 'loadBookById'. Either include it or remove the dependency array.",["313"],["314"],"React Hook useEffect has a missing dependency: 'loadBook'. Either include it or remove the dependency array.",["315"],["306"],["307"],["316"],["306"],["307"],"no-global-assign","no-unsafe-negation",{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"317","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"326","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},"Update the dependencies array to be: [loadUser]",{"range":"333","text":"334"},"Update the dependencies array to be: [dispatch, state.modalRegister]",{"range":"335","text":"336"},"Update the dependencies array to be: [dispatch, state.modalLogin]",{"range":"337","text":"338"},{"range":"339","text":"334"},"Update the dependencies array to be: [loadBookUser]",{"range":"340","text":"341"},"Update the dependencies array to be: [loadBookById]",{"range":"342","text":"343"},{"range":"344","text":"343"},"Update the dependencies array to be: [loadBook]",{"range":"345","text":"346"},"Update the dependencies array to be: [dispatch]",{"range":"347","text":"348"},[1042,1044],"[loadUser]",[1289,1310],"[dispatch, state.modalRegister]",[2198,2216],"[dispatch, state.modalLogin]",[2302,2304],[3363,3365],"[loadBookUser]",[1116,1118],"[loadBookById]",[1586,1588],[944,946],"[loadBook]",[407,409],"[dispatch]"]